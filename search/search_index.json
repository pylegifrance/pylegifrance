{"config":{"lang":["fr"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\u00c0 Propos","text":"<p>PyLegifrance simplifie l'acc\u00e8s aux donn\u00e9es juridiques fran\u00e7aises via l'API Legifrance.</p>"},{"location":"#sections","title":"Sections","text":"<p>Cette documentation suit le framework Di\u00e1taxis, qui organise la documentation technique en quatre quadrants distincts :</p> <ul> <li>Tutoriels - Apprentissage guid\u00e9 pour les d\u00e9butants</li> <li>Guides pratiques - Instructions pratiques pour r\u00e9soudre des probl\u00e8mes sp\u00e9cifiques</li> <li>R\u00e9f\u00e9rence API - Information technique d\u00e9taill\u00e9e</li> <li>Explications - Clarification des concepts et contexte</li> </ul>"},{"location":"#installation","title":"Installation","text":"<pre><code>  uv add pylegifrance\n</code></pre>"},{"location":"#prerequis","title":"Pr\u00e9requis","text":"<p>Cr\u00e9ez un compte sur le portail PISTE : https://piste.gouv.fr</p> <p>Voir le guide officiel pour plus de d\u00e9tails.</p>"},{"location":"#liens","title":"Liens","text":"<ul> <li>GitHub</li> <li>Issues</li> <li>Standards de Codage</li> </ul>"},{"location":"explication/","title":"Explications","text":"<p>Cette section contient des documents explicatifs sur les concepts et l'architecture de PyLegifrance.</p> <ul> <li>Architecture - Pr\u00e9sentation de l'architecture en couches et des principes de conception</li> </ul>"},{"location":"explication/architecture/","title":"Architecture","text":"<p>Architecture en couches suivant le flux : User &gt; facade &gt; models &gt; generated models &gt; client &gt; api</p> <ol> <li>Fa\u00e7ades de domaine (<code>fonds/</code>) : API de haut niveau par fonds documentaire<ul> <li>JURI (jurisprudence) - impl\u00e9ment\u00e9</li> <li>LODA, CODE, JORF - \u00e0 venir</li> </ul> </li> <li>Mod\u00e8les de domaine (<code>models/</code>) : Structures de donn\u00e9es m\u00e9tier</li> <li>Mod\u00e8les g\u00e9n\u00e9r\u00e9s (<code>models/generated/</code>) : Mod\u00e8les pour l'API</li> <li>Client API (<code>client.py</code>) : Communication avec l'API Legifrance</li> </ol>"},{"location":"explication/architecture/#pourquoi-cette-architecture","title":"Pourquoi cette architecture ?","text":"<p>La s\u00e9paration entre <code>fonds/juri.py</code> et <code>models/juri/</code> suit un principe fondamental : s\u00e9parer l'interface utilisateur de la logique technique.</p> <ol> <li> <p><code>fonds/</code> : Fa\u00e7ade de domaine </p> <ul> <li>Offre une API stable et intuitive pour les d\u00e9veloppeurs et juristes</li> <li>Masque la complexit\u00e9 technique de l'API Legifrance</li> <li>Fournit des objets m\u00e9tier enrichis avec des m\u00e9thodes utiles</li> <li>Prot\u00e8ge le code client des changements dans l'API sous-jacente</li> </ul> </li> <li> <p><code>models/</code> : Mod\u00e8les de donn\u00e9es</p> <ul> <li>D\u00e9finit la structure pr\u00e9cise des donn\u00e9es juridiques</li> <li>Assure la validation via Pydantic (typage fort, contraintes)</li> <li>G\u00e8re la conversion bidirectionnelle avec les mod\u00e8les d'API</li> <li>Organise le code par pr\u00e9occupation technique</li> </ul> </li> </ol> <p>Cette architecture en couches permet un flux de donn\u00e9es clair (User &gt; facade &gt; models &gt; generated models &gt; client &gt; api) tout en offrant une s\u00e9paration des responsabilit\u00e9s qui facilite la maintenance et l'\u00e9volution du code.</p>"},{"location":"explication/architecture/#diagrammes-c4","title":"Diagrammes C4","text":"<p>Diagrammes bas\u00e9s sur C4 Model - du contexte global aux composants d\u00e9taill\u00e9s.</p>"},{"location":"explication/architecture/#niveau-1-diagramme-de-contexte-systeme","title":"Niveau 1 : Diagramme de contexte syst\u00e8me","text":""},{"location":"explication/architecture/#niveau-2-diagramme-des-conteneurs","title":"Niveau 2 : Diagramme des conteneurs","text":""},{"location":"explication/architecture/#niveau-3-diagramme-des-composants","title":"Niveau 3 : Diagramme des composants","text":""},{"location":"explication/architecture/#flux-de-donnees","title":"Flux de donn\u00e9es","text":"<pre><code>flowchart TD\n    dev[D\u00e9veloppeur]\n    facade[Fa\u00e7ade fonds/juri.py]\n    models[Mod\u00e8les models/juri/]\n    gen[Mod\u00e8les g\u00e9n\u00e9r\u00e9s models/generated/]\n    client[LegifranceClient]\n    api[API Legifrance]\n\n    dev --&gt;|\"[1] Appelle\"| facade\n    facade --&gt;|\"[2] Utilise\"| models\n    models --&gt;|\"[3] to_api_model\"| gen\n    gen --&gt;|\"[4] Utilis\u00e9 par\"| client\n    client --&gt;|\"[5] Envoie requ\u00eate\"| api\n\n    api --&gt;|\"[6] R\u00e9ponse\"| client\n    client --&gt;|\"[7] Transmet\"| gen\n    gen --&gt;|\"[8] from_api_model\"| models\n    models --&gt;|\"[9] Traitement\"| facade\n    facade --&gt;|\"[10] Objets enrichis\"| dev\n\n    classDef external fill:#999,stroke:#333,stroke-width:2px\n    classDef core fill:#9cf,stroke:#333,stroke-width:2px\n\n    class dev,api external\n    class facade,models,gen,client core\n</code></pre>"},{"location":"explication/architecture/#avantages-cles","title":"Avantages cl\u00e9s","text":"<ul> <li>Stabilit\u00e9 : Interface publique ind\u00e9pendante des changements d'API</li> <li>Mod\u00e8les m\u00e9tier : Fonctionnalit\u00e9s sp\u00e9cifiques au domaine juridique</li> <li>Validation robuste : Typage et validation via Pydantic</li> <li>Structure intuitive : Organisation par fonds documentaires juridiques</li> </ul>"},{"location":"guides-pratiques/","title":"Guides pratiques","text":"<p>Cette section contient des guides pratiques pour vous aider \u00e0 utiliser PyLegifrance.</p>"},{"location":"guides-pratiques/#demarrage","title":"D\u00e9marrage","text":"<ul> <li>Installation</li> <li>Obtenir un compte PISTE</li> <li>Configuration des cl\u00e9s API</li> </ul>"},{"location":"guides-pratiques/#recherche","title":"Recherche","text":"<ul> <li>Recherche dans les codes</li> <li>Recherche dans le fond LODA (LOI, ORDONNANCE, DECRET, ARRETE)</li> <li>Recherche dans la Jurisprudence</li> </ul>"},{"location":"guides-pratiques/demarrage/api-configuration/","title":"Configuration des cl\u00e9s API","text":"<p>Deux options pour configurer vos identifiants API :</p>"},{"location":"guides-pratiques/demarrage/api-configuration/#1-variables-denvironnement-ou-env","title":"1. Variables d'environnement (ou <code>.env</code>)","text":"<pre><code>LEGIFRANCE_CLIENT_ID=votre_client_id\nLEGIFRANCE_CLIENT_SECRET=votre_client_secret\n</code></pre> <p>Le client s'initialise automatiquement :</p> <pre><code>from pylegifrance import LegifranceClient\n\nclient = LegifranceClient()\n</code></pre>"},{"location":"guides-pratiques/demarrage/api-configuration/#2-configuration-manuelle","title":"2. Configuration manuelle","text":"<p>Utile si vos cl\u00e9s proviennent d'un vault ou d'un syst\u00e8me externe :</p> <pre><code>from pylegifrance import LegifranceClient\nfrom pylegifrance.config import ApiConfig\n\nclient = LegifranceClient(ApiConfig(client_id=\"...\", client_secret=\"...\"))\n</code></pre> <p>\u26a0\ufe0f Les identifiants sont obligatoires d\u00e8s l'instanciation, sinon une erreur est lev\u00e9e.</p>"},{"location":"guides-pratiques/demarrage/installation/","title":"Installation","text":"<pre><code>  uv add pylegifrance\n</code></pre>"},{"location":"guides-pratiques/demarrage/piste-account/","title":"Obtenir un compte PISTE","text":"<ol> <li>Cr\u00e9ez un compte sur https://piste.gouv.fr</li> <li>Souscrivez \u00e0 l'API Legifrance</li> <li>R\u00e9cup\u00e9rez vos identifiants (client_id et client_secret)</li> </ol> <p>Voir le guide officiel pour plus de d\u00e9tails.</p>"},{"location":"guides-pratiques/recherche/code/","title":"Recherche dans les codes","text":"<p>Pour la liste des codes disponibles : https://www.legifrance.gouv.fr/liste/code?etatTexte=VIGUEUR</p> <pre><code>from pylegifrance import LegifranceClient\nfrom pylegifrance.fonds.code import Code\nfrom pylegifrance.models.code.enum import NomCode\n\n# Initialiser le client et l'interface Code\nclient = LegifranceClient(client_id=\"...\", client_secret=\"...\")\ncode = Code(client)\n\n# Obtenir l'article 7 du Code civil\nresultats = (code.search()\n                .in_code(NomCode.CC)  # Code civil\n                .article_number(\"7\")\n                .execute())\n\n# Obtenir l'article 7 du Code civil avec formatage\nresultats = (code.search()\n                .in_code(NomCode.CC)  # Code civil\n                .article_number(\"7\")\n                .with_formatter()\n                .execute())\n\n# Obtenir l'int\u00e9gralit\u00e9 du Code civil\nresultats = (code.search()\n                .in_code(NomCode.CC)  # Code civil\n                .execute())\n\n# Rechercher le mot \"s\u00fbret\u00e9\" dans les articles du Code civil\nresultats = (code.search()\n                .in_code(NomCode.CC)  # Code civil\n                .text(\"s\u00fbret\u00e9\")\n                .execute())\n</code></pre> <p>La classe <code>Code</code> permet la recherche dans les codes juridiques fran\u00e7ais (CODE_DATE, CODE_ETAT) d'un article par son num\u00e9ro, d'un terme de recherche ou d'un code dans son int\u00e9gralit\u00e9, en utilisant une API fluide.</p> <p>Par d\u00e9faut, la recherche s'effectue sur les codes en vigueur \u00e0 la date actuelle.  Pour effectuer une recherche historique, utilisez la m\u00e9thode <code>at_date()</code> ou initialisez avec <code>fond=\"CODE_DATE\"</code>.</p> <p>! Attention : Il est de la responsabilit\u00e9 exclusive de l'utilisateur de v\u00e9rifier que les informations renvoy\u00e9es par l'API sont pertinentes et \u00e0 jour.</p>"},{"location":"guides-pratiques/recherche/code/#options-supplementaires-de-recherche","title":"Options suppl\u00e9mentaires de recherche","text":"<pre><code># Formatage des r\u00e9sultats\nresultats = (code.search()\n                .in_code(NomCode.CC)  # Code civil\n                .article_number(\"7\")\n                .with_formatter()\n                .execute())\n\n# Recherche \u00e0 une date sp\u00e9cifique\nresultats = (code.search()\n                .in_code(NomCode.CC)  # Code civil\n                .at_date(\"2020-01-01\")\n                .execute())\n\n# Pagination des r\u00e9sultats\nresultats = (code.search()\n                .in_code(NomCode.CC)  # Code civil\n                .text(\"contrat\")\n                .paginate(page_number=1, page_size=20)\n                .execute())\n</code></pre>"},{"location":"guides-pratiques/recherche/jurisprudence/","title":"R\u00e9cup\u00e9ration du contenu des d\u00e9cisions de jurisprudence","text":""},{"location":"guides-pratiques/recherche/jurisprudence/#creation-dune-instance-juriapi","title":"Cr\u00e9ation d'une instance JuriAPI","text":"<p>Utilisez le client pour cr\u00e9er une instance JuriAPI :</p> <pre><code>from pylegifrance.fonds.juri import JuriAPI\n\njuri_api = JuriAPI(client)\n</code></pre>"},{"location":"guides-pratiques/recherche/jurisprudence/#recuperation-dune-decision","title":"R\u00e9cup\u00e9ration d'une d\u00e9cision","text":"<p>Vous pouvez r\u00e9cup\u00e9rer une d\u00e9cision en utilisant son identifiant :</p> <pre><code># R\u00e9cup\u00e9ration d'une d\u00e9cision par son identifiant\ndecision = juri_api.fetch(\"JURITEXT000037999394\")  # Remplacez par l'identifiant r\u00e9el de la d\u00e9cision\n</code></pre> <p>Ou par son ancien identifiant :</p> <pre><code># R\u00e9cup\u00e9ration d'une d\u00e9cision par son ancien identifiant\ndecision = juri_api.fetch_with_ancien_id(\"07-87362\")  # Remplacez par l'ancien identifiant r\u00e9el\n</code></pre>"},{"location":"guides-pratiques/recherche/jurisprudence/#acces-au-contenu-de-la-decision","title":"Acc\u00e8s au contenu de la d\u00e9cision","text":"<p>Une fois que vous avez un objet <code>JuriDecision</code>, vous pouvez acc\u00e9der \u00e0 son contenu en utilisant diverses propri\u00e9t\u00e9s :</p> <pre><code># Obtenir le contenu textuel de la d\u00e9cision\ncontenu_texte = decision.text\n\n# Obtenir le contenu format\u00e9 en HTML de la d\u00e9cision\ncontenu_html = decision.text_html\n\n# Obtenir d'autres propri\u00e9t\u00e9s\ntitre = decision.title\ntitre_long = decision.long_title\nformation = decision.formation\nnumero = decision.numero\njuridiction = decision.jurisdiction\nsolution = decision.solution\ndate = decision.date\n</code></pre>"},{"location":"guides-pratiques/recherche/jurisprudence/#recherche-de-decisions","title":"Recherche de d\u00e9cisions","text":"<p>Si vous ne connaissez pas l'identifiant, vous pouvez rechercher des d\u00e9cisions :</p> <pre><code>from pylegifrance.fonds.juri import SearchRequest\nfrom pylegifrance.models.juri.constants import JuridictionJudiciaire\n\n# Recherche simple par mots-cl\u00e9s\nresultats = juri_api.search(\"responsabilit\u00e9 civile\")\n\n# Recherche avanc\u00e9e avec filtres\nrequete_recherche = SearchRequest(\n    search=\"contrat\",\n    juridiction_judiciaire=[JuridictionJudiciaire.cour_de_cassation.value],\n    page_size=5\n)\nresultats = juri_api.search(requete_recherche)\n\n# Acc\u00e8s au contenu du premier r\u00e9sultat\nif resultats:\n    premiere_decision = resultats[0]\n    contenu = premiere_decision.text\n</code></pre>"},{"location":"guides-pratiques/recherche/jurisprudence/#obtenir-differentes-versions-dune-decision","title":"Obtenir diff\u00e9rentes versions d'une d\u00e9cision","text":"<p>Vous pouvez \u00e9galement obtenir diff\u00e9rentes versions d'une d\u00e9cision :</p> <pre><code># Obtenir la version \u00e0 une date sp\u00e9cifique\nversion_a_date = decision.at(\"2022-01-01\")\n\n# Obtenir la derni\u00e8re version\nderniere_version = decision.latest()\n\n# Obtenir toutes les versions\ntoutes_versions = decision.versions()\n</code></pre> <p>Chacune de ces m\u00e9thodes renvoie un objet <code>JuriDecision</code> (ou une liste d'objets) que vous pouvez utiliser pour acc\u00e9der au contenu comme indiqu\u00e9 ci-dessus.</p>"},{"location":"guides-pratiques/recherche/loda/","title":"Recherche dans le fond LODA (LOI, ORDONNANCE, DECRET, ARRETE)","text":"<p>La classe <code>Loda</code> permet la recherche dans le fond LODA (LODA_DATE, LODA_ETAT) d'un texte par son num\u00e9ro, d'un article dans un texte sp\u00e9cifique, ou d'un terme de recherche dans les champs d'un texte. Il est possible de s\u00e9lectionner le type de textes en modifiant la liste \"nature\" qui est par d\u00e9faut [\"LOI\", \"ORDONNANCE\", \"DECRET\", \"ARRETE\"]. </p> <p>Cette API ne r\u00e9cup\u00e8re que les textes en vigueur \u00e0 la date actuelle. Par d\u00e9faut, la facette \"DATE_VERSION\" est d\u00e9finie sur la date du jour, et les facettes \"TEXT_LEGAL_STATUS\" et \"ARTICLE_LEGAL_STATUTS\" sont d\u00e9finies sur \"VIGEUR\", quel que soit le fond cible (LODA_DATE ou LODA_ETAT).</p> <p>\u26a0\ufe0f Attention : Il est de la responsabilit\u00e9 exclusive de l'utilisateur de v\u00e9rifier que les informations renvoy\u00e9es par l'API sont pertinentes et \u00e0 jour.</p>"},{"location":"guides-pratiques/recherche/loda/#options-supplementaires-de-recherche","title":"Options suppl\u00e9mentaires de recherche","text":"<pre><code># Pagination\nresultats = loda.search(SearchRequest(search=\"environnement\", page_number=2, page_size=20))\n\n# Recherche simplifi\u00e9e avec une cha\u00eene de caract\u00e8res\nresultats = loda.search(\"environnement\")\n\n# Acc\u00e9der \u00e0 une version sp\u00e9cifique d'un texte \u00e0 une date donn\u00e9e\ntexte_version = loda.fetch_version_at(\"78-17\", \"2022-01-01\")\n\n# R\u00e9cup\u00e9rer toutes les versions d'un texte\nversions = loda.fetch_versions(\"78-17\")\n</code></pre>"},{"location":"reference/","title":"R\u00e9f\u00e9rence API","text":"<p>Cette section contient la documentation technique d\u00e9taill\u00e9e de la biblioth\u00e8que PyLegifrance. Elle est organis\u00e9e par cat\u00e9gories pour faciliter la navigation et la recherche d'informations.</p>"},{"location":"reference/#client-et-configuration","title":"Client et Configuration","text":"<p>Ces classes permettent d'initialiser et de configurer l'acc\u00e8s \u00e0 l'API Legifrance.</p> <ul> <li>LegifranceClient - Client principal pour interagir avec l'API Legifrance</li> <li>ApiConfig - Configuration d'acc\u00e8s \u00e0 l'API (identifiants, URLs, timeouts)</li> </ul>"},{"location":"reference/#recherche-et-consultation","title":"Recherche et Consultation","text":"<p>Ces fonctions permettent d'effectuer des recherches dans les diff\u00e9rentes bases de donn\u00e9es juridiques.</p>"},{"location":"reference/#codes","title":"Codes","text":"<ul> <li>Code - Recherche dans les codes fran\u00e7ais (Code civil, Code p\u00e9nal, etc.) avec une API fluide</li> </ul>"},{"location":"reference/#lois-ordonnances-decrets-et-arretes-loda","title":"Lois, Ordonnances, D\u00e9crets et Arr\u00eat\u00e9s (LODA)","text":"<ul> <li>Loda - Recherche dans les lois, ordonnances, d\u00e9crets et arr\u00eat\u00e9s</li> </ul>"},{"location":"reference/#jurisprudence","title":"Jurisprudence","text":"<ul> <li>JuriAPI - API pour r\u00e9cup\u00e9rer et rechercher des d\u00e9cisions de jurisprudence</li> <li>JuriDecision - Repr\u00e9sentation d'une d\u00e9cision de jurisprudence</li> </ul>"},{"location":"reference/Fonds/code/","title":"Code","text":"<pre><code>from pylegifrance import LegifranceClient\nfrom pylegifrance.fonds.code import Code\n\nclient = LegifranceClient(client_id=\"...\", client_secret=\"...\")\ncode = Code(client)\n\n# Cr\u00e9ation d'une requ\u00eate de recherche\nresultats = (code.search()\n                .in_code(NomCode.CC)  # Code civil\n                .article_number(\"1382\")\n                .execute())\n</code></pre> <p>Interface fluide pour rechercher des articles dans les codes fran\u00e7ais en utilisant l'API Legifrance.</p>"},{"location":"reference/Fonds/code/#description","title":"Description","text":"<p>La classe <code>Code</code> et sa m\u00e9thode <code>search()</code> permettent d'effectuer des recherches dans les codes fran\u00e7ais (Code civil, Code p\u00e9nal, etc.) en utilisant une API fluide avec le pattern Builder. Cette approche permet de construire des requ\u00eates complexes de mani\u00e8re lisible et maintenable.</p>"},{"location":"reference/Fonds/code/#initialisation","title":"Initialisation","text":"<pre><code>from pylegifrance import LegifranceClient\nfrom pylegifrance.fonds.code import Code\n\nclient = LegifranceClient(client_id=\"...\", client_secret=\"...\")\ncode = Code(client, fond=\"CODE_ETAT\")  # ou \"CODE_DATE\" pour recherche historique\n</code></pre>"},{"location":"reference/Fonds/code/#methodes-principales","title":"M\u00e9thodes principales","text":""},{"location":"reference/Fonds/code/#search","title":"search()","text":"<pre><code>def search() -&gt; CodeSearchBuilder\n</code></pre> <p>D\u00e9marre la construction d'une requ\u00eate de recherche et retourne un builder pour configurer la recherche.</p>"},{"location":"reference/Fonds/code/#fetch_codetext_id","title":"fetch_code(text_id)","text":"<pre><code>def fetch_code(text_id: str) -&gt; CodeConsultFetcher\n</code></pre> <p>R\u00e9cup\u00e8re le contenu complet d'un code juridique identifi\u00e9 par son ID LEGITEXT.</p>"},{"location":"reference/Fonds/code/#fetch_articlearticle_id","title":"fetch_article(article_id)","text":"<pre><code>def fetch_article(article_id: str) -&gt; ArticleFetcher\n</code></pre> <p>R\u00e9cup\u00e8re un article sp\u00e9cifique identifi\u00e9 par son ID LEGIARTI.</p>"},{"location":"reference/Fonds/code/#methodes-du-codesearchbuilder","title":"M\u00e9thodes du CodeSearchBuilder","text":""},{"location":"reference/Fonds/code/#in_codecode_name","title":"in_code(code_name)","text":"<pre><code>def in_code(code_name: NomCode) -&gt; Self\n</code></pre> <p>Filtre la recherche \u00e0 un code juridique sp\u00e9cifique.</p>"},{"location":"reference/Fonds/code/#in_codescode_names","title":"in_codes(code_names)","text":"<pre><code>def in_codes(code_names: List[Union[str, NomCode]]) -&gt; Self\n</code></pre> <p>Filtre la recherche \u00e0 plusieurs codes juridiques.</p>"},{"location":"reference/Fonds/code/#article_numbernumber","title":"article_number(number)","text":"<pre><code>def article_number(number: str) -&gt; Self\n</code></pre> <p>Recherche un article par son num\u00e9ro.</p>"},{"location":"reference/Fonds/code/#textsearch_text-in_field","title":"text(search_text, in_field)","text":"<pre><code>def text(search_text: str, in_field: TypeChampCode = TypeChampCode.ALL) -&gt; Self\n</code></pre> <p>Recherche un texte dans les articles. Le param\u00e8tre <code>in_field</code> peut \u00eatre: - <code>TypeChampCode.NUM_ARTICLE</code>: Num\u00e9ro d'article - <code>TypeChampCode.TITLE</code>: Titre de l'article - <code>TypeChampCode.TEXT</code>: Texte de l'article - <code>TypeChampCode.ALL</code>: Tous les champs (d\u00e9faut)</p>"},{"location":"reference/Fonds/code/#at_datedate_str","title":"at_date(date_str)","text":"<pre><code>def at_date(date_str: str) -&gt; Self\n</code></pre> <p>Sp\u00e9cifie une date pour la recherche (format \"YYYY-MM-DD\").</p>"},{"location":"reference/Fonds/code/#with_legal_statusstatus","title":"with_legal_status(status)","text":"<pre><code>def with_legal_status(status: List[EtatJuridique] = [EtatJuridique.VIGUEUR]) -&gt; Self\n</code></pre> <p>Filtre par \u00e9tat juridique des articles.</p>"},{"location":"reference/Fonds/code/#with_formatter","title":"with_formatter()","text":"<pre><code>def with_formatter() -&gt; Self\n</code></pre> <p>Active le formatage des r\u00e9sultats pour une meilleure lisibilit\u00e9.</p>"},{"location":"reference/Fonds/code/#paginatepage_number-page_size","title":"paginate(page_number, page_size)","text":"<pre><code>def paginate(page_number: int = 1, page_size: int = 10) -&gt; Self\n</code></pre> <p>Configure la pagination des r\u00e9sultats.</p>"},{"location":"reference/Fonds/code/#execute","title":"execute()","text":"<pre><code>def execute() -&gt; Dict\n</code></pre> <p>Ex\u00e9cute la recherche et retourne les r\u00e9sultats.</p>"},{"location":"reference/Fonds/code/#structure-des-resultats","title":"Structure des r\u00e9sultats","text":"<pre><code>{\n    \"results\": [\n        {\n            \"id\": \"LEGIARTI000006419305\",\n            \"title\": \"Article 1\",\n            \"text\": \"Contenu de l'article...\",\n            \"num\": \"1\",\n            \"etat\": \"VIGUEUR\",\n            \"date_version\": \"2023-01-01\",\n            \"liens\": [...]\n        },\n        # Autres r\u00e9sultats...\n    ],\n    \"pagination\": {\n        \"page\": 1,\n        \"pageSize\": 10,\n        \"total\": 42\n    }\n}\n</code></pre>"},{"location":"reference/Fonds/code/#exceptions","title":"Exceptions","text":"<ul> <li><code>ValueError</code>: Si les param\u00e8tres fournis sont invalides.</li> <li><code>Exception</code>: Si l'appel \u00e0 l'API \u00e9choue.</li> </ul>"},{"location":"reference/Fonds/code/#exemples","title":"Exemples","text":""},{"location":"reference/Fonds/code/#recherche-dun-article-par-numero-dans-le-code-civil","title":"Recherche d'un article par num\u00e9ro dans le Code civil","text":"<pre><code>from pylegifrance import LegifranceClient\nfrom pylegifrance.fonds.code import Code\nfrom pylegifrance.models.code.enum import NomCode\n\nclient = LegifranceClient(client_id=\"...\", client_secret=\"...\")\ncode = Code(client)\n\n# Recherche de l'article 1382 du Code civil\nresultats = (code.search()\n                .in_code(NomCode.CC)  # Code civil\n                .article_number(\"1382\")\n                .with_formatter()\n                .execute())\n\n# Affichage du premier r\u00e9sultat\nif resultats[\"results\"]:\n    article = resultats[\"results\"][0]\n    print(f\"Article {article['num']}: {article['title']}\")\n    print(article['text'])\n</code></pre>"},{"location":"reference/Fonds/code/#recherche-par-mot-cle-dans-le-texte-des-articles","title":"Recherche par mot-cl\u00e9 dans le texte des articles","text":"<pre><code>from pylegifrance.models.code.enum import TypeChampCode\n\n# Recherche des articles contenant le mot \"responsabilit\u00e9\" dans le Code civil\nresultats = (code.search()\n                .in_code(NomCode.CC)  # Code civil\n                .text(\"responsabilit\u00e9\", in_field=TypeChampCode.TEXT)\n                .paginate(page_size=20)\n                .execute())\n\n# Affichage du nombre de r\u00e9sultats\nprint(f\"Nombre de r\u00e9sultats: {resultats['pagination']['total']}\")\n</code></pre>"},{"location":"reference/Fonds/code/#recherche-historique-a-une-date-specifique","title":"Recherche historique \u00e0 une date sp\u00e9cifique","text":"<pre><code># Recherche dans le Code civil tel qu'il \u00e9tait au 1er janvier 2000\nresultats = (code.search()\n                .in_code(NomCode.CC)\n                .at_date(\"2000-01-01\")\n                .execute())\n</code></pre>"},{"location":"reference/Fonds/code/#codes-frequemment-utilises","title":"Codes fr\u00e9quemment utilis\u00e9s","text":"<ul> <li>Code civil: <code>NomCode.CC</code> ou \"LEGITEXT000006070721\"</li> <li>Code p\u00e9nal: <code>NomCode.CP</code> ou \"LEGITEXT000006070719\"</li> <li>Code de commerce: <code>NomCode.CCOM</code> ou \"LEGITEXT000005634379\"</li> <li>Code du travail: <code>NomCode.CTRAV</code> ou \"LEGITEXT000006072050\"</li> <li>Code de proc\u00e9dure civile: <code>NomCode.CPC</code> ou \"LEGITEXT000006070716\"</li> <li>Code de proc\u00e9dure p\u00e9nale: <code>NomCode.CPP</code> ou \"LEGITEXT000006071154\"</li> </ul>"},{"location":"reference/Fonds/juri/","title":"JURI","text":"<pre><code>class JuriAPI:\n    def __init__(self, client: LegifranceClient)\n    def fetch(self, text_id: str) -&gt; JuriDecision\n    def fetch_with_ancien_id(self, ancien_id: str) -&gt; JuriDecision\n    def fetch_version_at(self, text_id: str, date: str) -&gt; JuriDecision\n    def fetch_versions(self, text_id: str) -&gt; List[JuriDecision]\n    def search(self, query: Union[str, SearchRequest]) -&gt; List[JuriDecision]\n</code></pre> <p>Fournit des m\u00e9thodes pour r\u00e9cup\u00e9rer et rechercher des d\u00e9cisions de jurisprudence.</p>"},{"location":"reference/Fonds/loda/","title":"LODA","text":"<p>La classe <code>Loda</code> fournit une interface pour acc\u00e9der au fond LODA (Lois, Ordonnances, D\u00e9crets, Arr\u00eat\u00e9s) de l'API Legifrance.</p>"},{"location":"reference/Fonds/loda/#initialisation","title":"Initialisation","text":"<pre><code>from pylegifrance.client import LegifranceClient\nfrom pylegifrance.fonds.loda import Loda\n\nclient = LegifranceClient()\nloda = Loda(client)\n</code></pre>"},{"location":"reference/Fonds/loda/#methodes-principales","title":"M\u00e9thodes principales","text":""},{"location":"reference/Fonds/loda/#fetch","title":"fetch","text":"<pre><code>def fetch(self, text_id: str) -&gt; Optional[TexteLoda]:\n</code></pre> <p>R\u00e9cup\u00e8re un texte par son identifiant.</p>"},{"location":"reference/Fonds/loda/#fetch_version_at","title":"fetch_version_at","text":"<pre><code>def fetch_version_at(self, text_id: str, date: str) -&gt; Optional[TexteLoda]:\n</code></pre> <p>R\u00e9cup\u00e8re une version d'un texte \u00e0 une date sp\u00e9cifique.</p>"},{"location":"reference/Fonds/loda/#fetch_versions","title":"fetch_versions","text":"<pre><code>def fetch_versions(self, text_id: str) -&gt; List[TexteLoda]:\n</code></pre> <p>R\u00e9cup\u00e8re toutes les versions d'un texte.</p>"},{"location":"reference/Fonds/loda/#search","title":"search","text":"<pre><code>def search(self, query: SearchRequest | str) -&gt; List[TexteLoda]:\n</code></pre> <p>Recherche des textes correspondant \u00e0 la requ\u00eate. La requ\u00eate peut \u00eatre une cha\u00eene de caract\u00e8res simple ou un objet SearchRequest pour des recherches plus avanc\u00e9es.</p>"},{"location":"reference/Fonds/loda/#classe-searchrequest","title":"Classe SearchRequest","text":"<pre><code>class SearchRequest:\n    text_id: str = \"\"\n    search: str = None\n    champ: str = \"NUM_ARTICLE\"\n    type_recherche: str = \"EXACTE\"\n    fond: str = \"LODA_DATE\"\n    nature: List[str] = [\"LOI\", \"ORDONNANCE\", \"DECRET\", \"ARRETE\"]\n    date_signature: List[str] = None\n    page_number: int = 1\n    page_size: int = 10\n</code></pre> <p>Permet de construire des requ\u00eates de recherche avanc\u00e9es pour le fond LODA.</p>"},{"location":"reference/classes/api_config/","title":"ApiConfig","text":"<pre><code>class ApiConfig:\n    def __init__(\n        client_id: str,\n        client_secret: str,\n        token_url: str = \"...\",\n        api_url: str = \"...\",\n        connect_timeout: float = 3.05,\n        read_timeout: float = 27.0,\n    )\n\n    @classmethod\n    def from_env() -&gt; \"ApiConfig\"\n</code></pre> <p>G\u00e8re la configuration d'acc\u00e8s \u00e0 l'API (identifiants, URLs, timeouts).</p>"},{"location":"reference/classes/legifrance_client/","title":"LegifranceClient","text":"<pre><code>class LegifranceClient:\n    def __init__(config: Optional[ApiConfig] = None)\n    def update_api_keys(self, legifrance_api_key=None, legifrance_api_secret=None)\n    def call_api(self, route: str, data: str)\n    def ping(self, route: str = \"consult/ping\")\n    def get(self, route: str)\n</code></pre> <p>G\u00e8re l'authentification et les appels \u00e0 l'API Legifrance.</p>"},{"location":"tutoriels/","title":"Tutoriels","text":""},{"location":"tutoriels/#premier-pas-avec-pylegifrance","title":"Premier pas avec PyLegifrance","text":""},{"location":"tutoriels/#exemple-de-base","title":"Exemple de base","text":"<pre><code>from pylegifrance import LegifranceClient\nfrom pylegifrance.fonds.code import Code\nfrom pylegifrance.models.code.enum import NomCode\n\n# Initialisation\nclient = LegifranceClient(client_id=\"...\", client_secret=\"...\")\ncode = Code(client)\n\n# Rechercher l'article 1382 du Code civil\nresultat = (code.search()\n              .in_code(NomCode.CC)  # Code civil\n              .article_number(\"1382\")\n              .execute())\nprint(resultat)\n</code></pre>"},{"location":"tutoriels/#exemples-avances","title":"Exemples avanc\u00e9s","text":""},{"location":"tutoriels/#recherche-par-mots-cles","title":"Recherche par mots-cl\u00e9s","text":"<pre><code>from pylegifrance.client import LegifranceClient\nfrom pylegifrance.fonds.loda import Loda\nfrom pylegifrance.models.loda.search import SearchRequest\n\n# Initialisation\nclient = LegifranceClient()\nloda_api = Loda(client)\n\n# Rechercher \"donn\u00e9es personnelles\" dans la loi informatique et libert\u00e9s\nresultats = loda_api.search(SearchRequest(\n    text_id=\"78-17\",\n    champ=\"ARTICLE\",\n    type_recherche=\"TOUS_LES_MOTS_DANS_UN_CHAMP\"\n))\n</code></pre>"},{"location":"tutoriels/#filtrage-par-date-et-type","title":"Filtrage par date et type","text":"<pre><code># Rechercher les d\u00e9crets sur l'environnement de 2022\nresultats = loda_api.search(SearchRequest(\n    search=\"environnement\",\n    champ=\"TITLE\",\n    nature=[\"DECRET\"],\n    date_signature=[\"2022-01-01\", \"2022-12-31\"]\n))\n</code></pre>"},{"location":"tutoriels/#formatage-des-resultats","title":"Formatage des r\u00e9sultats","text":"<pre><code># Avec formatage\nresultat_formate = (code.search()\n                      .in_code(NomCode.CC)  # Code civil\n                      .article_number(\"16\")\n                      .with_formatter()\n                      .execute())\n</code></pre>"}]}